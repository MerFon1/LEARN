"""
Побочная диагональ
На вход программе подается натуральное число nn. Напишите программу, которая создает матрицу размером n \times nn×n и заполняет её по следующему правилу:

числа на побочной диагонали равны 11;
числа, стоящие выше этой диагонали, равны 00;
числа, стоящие ниже этой диагонали, равны 22.
Полученную матрицу выведите на экран. Числа в строке разделяйте одним пробелом.

Формат входных данных
На вход программе подается натуральное число nn — количество строк и столбцов в матрице.

Формат выходных данных
Программа должна вывести матрицу в соответствии с условием задачи.

Примечание. Побочная диагональ — это диагональ, идущая из правого верхнего в левый нижний угол матрицы.

Тестовые данные 🟢
Sample Input 1:

4
Sample Output 1:

0 0 0 1
0 0 1 2
0 1 2 2
1 2 2 2
Sample Input 2:

2
Sample Output 2:

0 1
1 2
Sample Input 3:

3
Sample Output 3:

0 0 1
0 1 2
1 2 2
"""
n = int(input())
ls = [[0]*n for i in range(n)]
for i in range(n):
    for j in range(n):
        if j == n - i - 1:
            ls[i][j]= 1
        elif (i>=j and i>=n-1-j) or (i<=j and i>=n-1-j):
            ls[i][j] = 2
[print(*i) for i in ls]
